@model Proyecto_Cartilla_Autocontrol.Models.OBRA

@{
    ViewBag.Title = "Edit";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-formularios">
            <div class="form-container">
                <h2>Editar Obra</h2>
                <form>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.obra_id)


                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre_obra, "Nombre Obra", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.nombre_obra, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombre_obra, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.direccion, "Dirección", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.COMUNA.REGION.region_id, "Región: ", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownList("REGION_region_id", ViewBag.RegionList as SelectList, "Seleccione una región", htmlAttributes: new { @class = "form-control", required = "required", title = "Por favor, seleccione una región" })
                        @Html.ValidationMessageFor(model => model.COMUNA.REGION.region_id, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.COMUNA_comuna_id, "Comuna: ", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownList("COMUNA_comuna_id", null, "Seleccione una comuna", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.COMUNA_comuna_id, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.entidad_patrocinante, "Entidad Patrocinante:", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.entidad_patrocinante, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.entidad_patrocinante, "", new { @class = "text-danger" })
                    </div>


                    @if ((bool)ViewBag.TieneRelaciones)
                    {
                        <p style="color: red; text-align: justify-all;">No se puede editar el tipo de proyecto. <br /> Por favor, borre los inmuebles asociados para realizar cambios.</p>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tipo_proyecto, "Tipo de Proyecto: ", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.tipo_proyecto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.tipo_proyecto, "", new { @class = "text-danger", required = "required", title = "Por favor, seleccione un tipo de proyecto" })
                        </div>

                        <div class="form-group" id="totalDeptosGroup">
                            @Html.LabelFor(model => model.total_deptos, "Total de Departamentos", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.total_deptos, "{0:N0}", new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.total_deptos, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" id="totalVivGroup">
                            @Html.LabelFor(model => model.total_viv, "Total de Viviendas", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.total_viv, "{0:N0}", new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.total_viv, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.tipo_proyecto, "Tipo de Proyecto: ", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("tipo_proyecto", new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Edificio", Value = "Edificio" },
                                new SelectListItem { Text = "Vivienda", Value = "Vivienda" },

                            }, "Seleccione un tipo de proyecto", new { @class = "form-control", id = "tipoProyecto" })
                            @Html.ValidationMessageFor(model => model.tipo_proyecto, "", new { @class = "text-danger", required = "required", title = "Por favor, seleccione un tipo de proyecto" })
                        </div>

                        <div class="form-group" id="totalDeptosGroup">
                            @Html.LabelFor(model => model.total_deptos, "Total de Departamentos", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.total_deptos, "{0:N0}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.total_deptos, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" id="totalVivGroup">
                            @Html.LabelFor(model => model.total_viv, "Total de Viviendas", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.total_viv, "{0:N0}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.total_viv, "", new { @class = "text-danger" })
                        </div>
                    }


                    <div class="form-group">

                        <input type="submit" value="Guardar Cambios" class="btn btn-primary-custom" />

                    </div>
                    <div>
                        <a style="width: 100%;" href="@Url.Action("Index")" class="btn-custom">Volver a la lista</a>
                    </div>
                </form>
            </div>
        </div>
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(function () {
            // Manejar el evento de cambio en el menú desplegable de la región
            $('#REGION_region_id').change(function () {
                var regionId = $(this).val(); // Obtener el valor seleccionado de la región
                // Realizar una solicitud AJAX para obtener las comunas correspondientes a la región seleccionada
                $.ajax({
                    url: '/Obra/GetComunasByRegion', // URL de la acción en el controlador que devuelve las comunas por región
                    type: 'GET',
                    data: { regionId: regionId }, // Enviar el ID de la región seleccionada
                    success: function (data) {
                        // Actualizar el menú desplegable de la comuna con las comunas correspondientes
                        var comunaDropdown = $('#COMUNA_comuna_id');
                        comunaDropdown.empty(); // Limpiar el menú desplegable
                        // Agregar las nuevas opciones al menú desplegable de la comuna
                        $.each(data, function (index, item) {
                            comunaDropdown.append($('<option></option>').text(item.Text).val(item.Value));
                        });
                    }
                });
            });
        });
    </script>

    <script>
        $(function () {
            // Ocultar los campos de total_deptos y total_viv al principio
            $('#totalDeptosGroup').hide();
            $('#totalVivGroup').hide();

            // Manejar el evento de cambio en el menú desplegable de tipo_proyecto
            $('#tipoProyecto').change(function () {
                var selectedValue = $(this).val();

                // Mostrar u ocultar los campos total_deptos y total_viv según el tipo de proyecto seleccionado
                if (selectedValue === "Edificio") {
                    $('#totalDeptosGroup').show();
                    $('#totalVivGroup').hide();
                } else if (selectedValue === "Vivienda") {
                    $('#totalDeptosGroup').hide();
                    $('#totalVivGroup').show();
                } else {
                    $('#totalDeptosGroup').hide();
                    $('#totalVivGroup').hide();
                }
            });

            // Llamar al evento change para que se ejecute al cargar la página
            $('#tipoProyecto').change();
        });
    </script>
    <script>
 // Script para manejar la expiración de la sesión
 setTimeout(function () {
     window.location.href = '@Url.Action("Login", "Account")';
 }, 43200000); // 12 horas en milisegundos
    </script>

}

else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Administrador</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}