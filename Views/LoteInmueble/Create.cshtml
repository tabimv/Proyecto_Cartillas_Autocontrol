@model Proyecto_Cartilla_Autocontrol.Models.LOTE_INMUEBLE

@{
    ViewBag.Title = "Create";

}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">

    using (Html.BeginForm())
    {
        <div class="container-formularios">
            <div class="form-container">
                <h2>Crear Nuevo Lote Inmueble</h2>
                <form>
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.LabelFor(model => model.OBRA_obra_id, "Obra Asociada", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownList("OBRA_obra_id", null, "Selecciona Obra Asociada", new { @class = "form-control", id = "obraDropdown", data_placeholder = "Selecciona Obra Asociada" })
                        @Html.ValidationMessageFor(model => model.OBRA_obra_id, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tipo_bloque, "Tipo de Bloque: ", htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownListFor(model => model.tipo_bloque, new List<SelectListItem>(), "Seleccione un tipo de Bloque", new { @class = "form-control", id = "tipoProyecto" })

                        @Html.ValidationMessageFor(model => model.tipo_bloque, "", new { @class = "text-danger" })
                    </div>

                    <div id="numero_letra" class="form-group">
                        @Html.LabelFor(model => model.numero_letra_bloque_1, "N° o Letra de bloque", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.numero_letra_bloque_1, new { htmlAttributes = new { @class = "form-control", @id = "numero_letra_bloque_input", placeholder = "Ingrese número o letra (ejemplo: 1, A)" } })
                        @Html.ValidationMessageFor(model => model.numero_letra_bloque_1, "", new { @class = "text-danger" })
                    </div>
                    <div id="abreviatura_inmuebles" class="form-group">
                        @Html.LabelFor(model => model.abreviatura, "Abreviatura", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.abreviatura, new { htmlAttributes = new { @class = "form-control", id = "abreviatura_custom" } })
                        @Html.ValidationMessageFor(model => model.abreviatura, "", new { @class = "text-danger" })
                    </div>

                    <div id="cantidadPisosFormGroup" class="form-group">
                        @Html.LabelFor(model => model.cantidad_pisos, "Cantidad de Pisos", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.cantidad_pisos, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cantidad_pisos, "", new { @class = "text-danger" })
                    </div>


                    <div id="rangoInicial" class="form-group">
                        @Html.LabelFor(model => model.rango_inicial, "Rango Inicial", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.rango_inicial, new { @class = "form-control", @id = "rango_inicial" })
                        @Html.ValidationMessageFor(model => model.rango_inicial, "", new { @class = "text-danger" })
                    </div>

                    <div id="rangoFinal" class="form-group">
                        @Html.LabelFor(model => model.rango_final, "Rango Final", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.rango_final, new { @class = "form-control", @id = "rango_final" })
                        @Html.ValidationMessageFor(model => model.rango_final, "", new { @class = "text-danger" })
                    </div>


                    <div id="cantidadImueblesFormGroup" class="form-group">
                        @Html.LabelFor(model => model.cantidad_inmuebles, "Cantidad de Inmuebles", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.cantidad_inmuebles, new { htmlAttributes = new { @class = "form-control", @id = "cantidad_inmuebles" } })
                        @Html.ValidationMessageFor(model => model.cantidad_inmuebles, "", new { @class = "text-danger" })
                    </div>

                    <div id="descripcionProyecto" class="form-group">
                        @Html.LabelFor(model => model.descripcion_tipo_proyecto, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextAreaFor(model => model.descripcion_tipo_proyecto, new { @class = "form-control", rows = 3 })
                        @Html.ValidationMessageFor(model => model.descripcion_tipo_proyecto, "", new { @class = "text-danger" })
                    </div>



                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input type="submit" value="Crear" class="btn btn-primary-custom" />
                    </div>
                    <div>
                        <a href="@Url.Action("LoteLista")" class="btn-custom" style="width: 100%;">Volver a la lista</a>
                    </div>
                </form>
            </div>
        </div>
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var input = document.getElementById('numero_letra_bloque_input');

            input.addEventListener('input', function () {
                this.value = this.value.toUpperCase();
            });
        });
    </script>
    <script>
        // Obtener los elementos del formulario
        var tipoProyectoInput = document.getElementById('tipoProyecto');
        var numeroLetraBloqueInput = document.getElementById('numero_letra_bloque_input');
        var abreviaturaInput = document.getElementById('abreviatura_custom');

        // Función para generar la abreviatura
        function generarAbreviatura() {
            var tipoProyectoValue = tipoProyectoInput.value;
            var numeroLetraBloqueValue = numeroLetraBloqueInput.value.toUpperCase();
            var tipoBloqueInicial = tipoProyectoValue.charAt(0).toUpperCase();

            // Asignar la abreviatura al campo correspondiente
            abreviaturaInput.value = tipoBloqueInicial + numeroLetraBloqueValue;
        }

        // Agregar eventos para generar la abreviatura
        tipoProyectoInput.addEventListener('change', generarAbreviatura);
        numeroLetraBloqueInput.addEventListener('input', generarAbreviatura);
    </script>
    <script>
        $(document).ready(function () {
            $('#obraDropdown').change(function () {
                var selectedObraId = $(this).val();
                obtenerTipoProyecto(selectedObraId);
                obtenerCantidadInmuebles(selectedObraId);

            });

            function obtenerTipoProyecto(obraId) {
                $.ajax({
                    url: '@Url.Action("ObtenerTipoProyecto", "LoteInmueble")',
                    type: 'GET',
                    data: { obraId: obraId },
                    success: function (response) {
                        var tipoProyecto = response.tipoProyecto;
                        actualizarTipoBloque(tipoProyecto);
                    },
                    error: function () {
                        console.log('Error al obtener el tipo de proyecto de la obra.');
                    }
                });
            }


            $('#cantidadPisosFormGroup').hide();
            $('#cantidadImueblesFormGroup').hide();
            $('#descripcionProyecto').hide();

            function actualizarTipoBloque(tipoProyecto) {
                var tipoBloqueDropdown = $('#tipoProyecto');
                tipoBloqueDropdown.empty();

                if (tipoProyecto === "Edificio") {
                    tipoBloqueDropdown.append($('<option>', {
                        value: 'Torre',
                        text: 'Torre'
                    }));
                    tipoBloqueDropdown.append($('<option>', {
                        value: 'Proyecto',
                        text: 'Proyecto'
                    }));
                    $('#cantidadPisosFormGroup').show();
                    $('#cantidadImueblesFormGroup').show();
                    $('#rangoInicial').hide();
                    $('#rangoFinal').hide();


                } else if (tipoProyecto === "Vivienda") {
                    tipoBloqueDropdown.append($('<option>', {
                        value: 'Manzana',
                        text: 'Manzana'
                    }));
                    tipoBloqueDropdown.append($('<option>', {
                        value: 'Proyecto',
                        text: 'Proyecto'
                    }));
                    $('#cantidadPisosFormGroup').hide();
                    $('#cantidadImueblesFormGroup').hide();
                    $('#cantidad_inmuebles').val(0);
                    $('#rangoInicial').show();
                    $('#rangoFinal').show();


                }
                // Agregar evento de cambio para el dropdown tipoProyecto
                tipoBloqueDropdown.change(function () {
                    var selectedTipoProyecto = $(this).val();
                    if (tipoProyecto === "Edificio") {
                        if (selectedTipoProyecto === "Torre") {
                            $('#cantidadPisosFormGroup').show();
                            $('#cantidadImueblesFormGroup').show();
                            $('#rangoInicial').hide();
                            $('#rangoFinal').hide();
                            $('#numero_letra').show();
                            $('#abreviatura_inmuebles').show();
                            $('#descripcionProyecto').hide();
                        } else if (selectedTipoProyecto === "Proyecto") {
                            $('#descripcionProyecto').show();
                            $('#cantidadPisosFormGroup').hide();
                            $('#cantidadImueblesFormGroup').hide();
                            $('#cantidad_inmuebles').val(0);
                            $('#rangoInicial').hide();
                            $('#rangoFinal').hide();
                            $('#numero_letra').show();
                            $('#abreviatura_inmuebles').show();
                        }
                    }
                    else if (tipoProyecto === "Vivienda") {
                        if (selectedTipoProyecto === "Manzana") {
                            $('#cantidadPisosFormGroup').hide();
                            $('#cantidadImueblesFormGroup').hide();
                            $('#cantidad_inmuebles').val(0);
                            $('#rangoInicial').show();
                            $('#rangoFinal').show();
                            $('#numero_letra').show();
                            $('#abreviatura_inmuebles').show();
                            $('#descripcionProyecto').hide();
                        } else if (selectedTipoProyecto === "Proyecto") {
                            $('#descripcionProyecto').show();
                            $('#cantidadPisosFormGroup').hide();
                            $('#cantidadImueblesFormGroup').hide();
                            $('#cantidad_inmuebles').val(0);
                            $('#rangoInicial').hide();
                            $('#rangoFinal').hide();
                            $('#numero_letra').show();
                            $('#abreviatura_inmuebles').show();
                        }
                    }
                });

            }


        });
    </script>
    <script>
        $(document).ready(function () {
            var timeoutId; // Variable para almacenar el ID del temporizador

            // Función para validar los rangos
            function validateRanges() {
                var rangoInicial = parseInt($("#rango_inicial").val(), 10);
                var rangoFinal = parseInt($("#rango_final").val(), 10);
                var isValid = true;

                // Limpiar mensajes de error previos
                $("#rango_inicial").removeClass("is-invalid");
                $("#rango_final").removeClass("is-invalid");
                $("#rango_inicial").next(".text-danger").text("");
                $("#rango_final").next(".text-danger").text("");

                // Cancelar cualquier temporizador activo
                if (timeoutId) {
                    clearTimeout(timeoutId);
                }

                if (!isNaN(rangoInicial) && !isNaN(rangoFinal)) {
                    if (rangoFinal <= rangoInicial) {
                        isValid = false;
                        $("#rango_final").addClass("is-invalid");
                        var $errorMsg = $("#rango_final").next(".text-danger");
                        $errorMsg.text("El valor de Rango Final debe ser mayor que el valor de Rango Inicial.");

                        // Mostrar el mensaje por 5 segundos
                        timeoutId = setTimeout(function () {
                            $errorMsg.text("");
                            $("#rango_final").removeClass("is-invalid");
                        }, 5000);
                    }
                }

                return isValid;
            }

            // Validar al hacer submit
            $("form").on("submit", function (event) {
                if (!validateRanges()) {
                    event.preventDefault(); // Previene el envío del formulario si la validación falla
                }
            });

            // Validar al cambiar los valores
            $("#rango_inicial, #rango_final").on("input", function () {
                validateRanges();
            });
        });
    </script>
    <script>
 // Script para manejar la expiración de la sesión
 setTimeout(function () {
     window.location.href = '@Url.Action("Login", "Account")';
 }, 43200000); // 12 horas en milisegundos
    </script>
}
else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Administrador</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}
