@{
    ViewBag.Title = "Crear Items";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Autocontrol")
{
    Layout = "~/Views/Shared/_Layout_Autocontrol.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Autocontrol")
{

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">
    <link rel="stylesheet" href="~/Content/css/items.css">

    <div class="container-formularios">
        <div class="form-container">
            <h2>Crear Items de Verificación Por Actividad</h2>
            @using (Html.BeginForm("GuardarRegistrosItems", "ItemVerifAutocontrol", FormMethod.Post))
            {
                @Html.AntiForgeryToken()




                <div class="form-group">
                    @Html.DropDownList("obra_id", ViewBag.ObraList as SelectList, "Seleccione una Obra", htmlAttributes: new { @class = "form-control", required = "required", title = "Por favor, seleccione una obra" })

                </div>

                <div class="form-group">
                    @Html.DropDownList("ActividadId", ViewBag.Actividades as SelectList, "Selecciona una actividad", htmlAttributes: new { required = "required", title = "Por favor, seleccione una Actividad Asociada", id = "ActividadId", @class = "form-control", disabled = "disabled" })
                </div>

                <!-- Campo oculto para almacenar el número total de registros -->
                <input type="hidden" name="TotalRegistros" id="TotalRegistros" value="1" />

                <div class="acciones">
                    <button type="button" class="btnAgregar" id="btnAgregarRegistro">Agregar Registro</button>
                    <button type="button" class="btnEliminar" id="btnEliminarRegistro">Eliminar Último Registro</button>
                </div>

                <!-- Tabla para mostrar los campos -->
                <table>
                    <thead>
                        <tr>
                            <th style="width: 20%;">Label</th>
                            <th>Elemento de verificación</th>
                            <th>¿Item de tipo Firma?</th>
                        </tr>
                    </thead>
                    <tbody id="contenedorRegistros">
                        <tr class="registro">
                            <td><input type="text" placeholder="Ej: A, B, C.." name="ItemsVerif[0].Label" required /> <br /> <span class="error-label" style="color: red;"></span> </td>
                            <td><input type="text" name="ItemsVerif[0].ElementoVerificacion" required /></td>
                            <td>
                                <!-- Alineación en el centro -->
                                <input type="checkbox" name="ItemsVerif[0].TipoItem" value="1" onchange="toggleTipoItem(this)" /> <!-- Checkbox para tipo_item -->
                            </td>

                        </tr>
                    </tbody>
                </table>

                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input type="submit" value="Crear" class="btn btn-primary-custom" />
                </div>

                <div>
                    <a style="padding: 10px 41%; width:100%;" href="@Url.Action("ItemLista")" class="btn-custom">Volver a la lista</a>
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/mobile/1.5.0/jquery.mobile-1.5.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#btnAgregarRegistro').on('click', function () {
                var $contenedor = $('#contenedorRegistros');
                var indice = $contenedor.find('.registro').length;

                var $nuevoRegistro = $contenedor.find('.registro:first').clone();
                $nuevoRegistro.find('input[type="text"]').val('');

                // Clonar también los campos de checkbox y desmarcarlos
                $nuevoRegistro.find('input[type="checkbox"]').prop('checked', false);

                // Actualizar los índices de los campos clonados
                var newIndex = $contenedor.find('.registro').length;
                $nuevoRegistro.find('input').each(function () {
                    var currentName = $(this).attr('name');
                    var newName = currentName.replace(/\[(\d+)\]/, '[' + newIndex + ']');
                    $(this).attr('name', newName);
                });

                $contenedor.append($nuevoRegistro);

                // Actualizar el campo TotalRegistros
                $('#TotalRegistros').val(newIndex + 1);
            });

            $('#btnEliminarRegistro').on('click', function () {
                var $contenedor = $('#contenedorRegistros');
                var $registros = $contenedor.find('.registro');
                if ($registros.length > 1) {
                    $registros.last().remove();
                    // Actualizar el campo TotalRegistros
                    $('#TotalRegistros').val($registros.length - 1);
                }
            });

            // Reindexar los registros antes de enviar el formulario
            $('form').submit(function () {
                var $contenedor = $('#contenedorRegistros');
                $contenedor.find('.registro').each(function (index) {
                    $(this).find('input').each(function () {
                        var currentName = $(this).attr('name');
                        var newName = currentName.replace(/\[(\d+)\]/, '[' + index + ']');
                        $(this).attr('name', newName);
                    });
                });
            });

        });
    </script>
    <script>
        $(function () {
            // Manejar el evento de cambio en el menú desplegable de la obra
            $('#obra_id').change(function () {
                var obraId = $(this).val(); // Obtener el valor seleccionado de la obra
                var actividadDropdown = $('#ActividadId');

                if (obraId) {
                    // Habilitar el dropdown de actividades cuando se seleccione una obra
                    actividadDropdown.prop('disabled', false);

                    // Realizar una solicitud AJAX para obtener las actividades correspondientes a la obra seleccionada
                    $.ajax({
                        url: '/ItemVerif/GetActividadesByObra', // URL de la acción en el controlador que devuelve las actividades por obra
                        type: 'GET',
                        data: { obraId: obraId }, // Enviar el ID de la obra seleccionada
                        success: function (data) {
                            // Actualizar el menú desplegable de actividades con las actividades correspondientes
                            actividadDropdown.empty(); // Limpiar el menú desplegable
                            // Agregar las nuevas opciones al menú desplegable de actividades
                            $.each(data, function (index, item) {
                                actividadDropdown.append($('<option></option>').text(item.Text).val(item.Value));
                            });
                        }
                    });
                } else {
                    // Deshabilitar el dropdown de actividades si no se selecciona ninguna obra
                    actividadDropdown.prop('disabled', true);
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Manejar el evento submit del formulario
            $('form').submit(function () {
                // Eliminar el campo 'obra_id' del formulario
                $('#obra_id').remove();
            });
        });

    </script>
    <script>
        function toggleTipoItem(checkbox) {
            // Obtener el valor actual del checkbox (1 si está marcado, 0 si no lo está)
            var value = checkbox.checked ? 1 : 0;

            // Buscar el input hidden que almacena el valor de tipo_item y actualizar su valor
            var tipoItemInput = checkbox.closest('tr').querySelector('input[name^="ItemsVerif"][name$=".TipoItem"]');
            tipoItemInput.value = value;
        }
    </script>

    <script>
        $(document).ready(function () {
            $('#contenedorRegistros').on('input', 'input[name^="ItemsVerif"][name$=".Label"]', function () {
                var label = $(this).val();
                var actividadId = $('#ActividadId').val();
                var registro = $(this).closest('.registro');
                var mensajeError = registro.find('.error-label');

                // Realizar una solicitud AJAX para verificar si ya existe un registro con el mismo label y actividad_id
                $.ajax({
                    url: '/ItemVerif/ValidarLabel',
                    type: 'POST',
                    data: { label: label, actividadId: actividadId },
                    success: function (data) {
                        if (data.existe) {
                            mensajeError.text('El label ya existe.');
                        } else {
                            // Verificar si hay otras etiquetas con el mismo valor
                            var etiquetasIguales = $('#contenedorRegistros input[name^="ItemsVerif"][name$=".Label"]').filter(function () {
                                return $(this).val() === label;
                            });

                            if (etiquetasIguales.length > 1) {
                                mensajeError.text('Label existente en el formulario.');
                            } else {
                                mensajeError.text('');
                            }
                        }
                    }
                });
            });
        });

    </script>
    <script>
// Script para manejar la expiración de la sesión
setTimeout(function () {
    window.location.href = '@Url.Action("Login", "Account")';
}, 43200000); // 12 horas en milisegundos
    </script>


}

else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Autocontrol</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}
