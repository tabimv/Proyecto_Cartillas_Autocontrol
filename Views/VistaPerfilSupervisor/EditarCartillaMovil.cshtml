@model Proyecto_Cartilla_Autocontrol.Models.ViewModels.CartillaMovilViewModel

@{
    ViewBag.Title = "Editar Cartilla";
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Supervisor")
{
    Layout = "~/Views/Shared/_Layout_Supv.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Supervisor")
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Content/css/Supervisor_Movil.css">
    <link rel="stylesheet" href="~/Content/css/loading.css">
    <link rel="stylesheet" href="~/Content/css/switch.css">


    using (Html.BeginForm("EditarCartillaMovil", "VistaPerfilSupervisor", FormMethod.Post))
    {

        <div class="container-formularios">
            <div class="form-container">
                <h2>Editar Cartilla Autocontrol </h2>

                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Cartilla.cartilla_id, new { id = "cartillaIdField" })



                <div class="form-group" style="margin-top: 20px;">
                    <label for="obraSelect"><strong>Obra: </strong></label>
                    @Html.DropDownList("OBRA_obra_id", (IEnumerable<SelectListItem>)ViewBag.OBRA_obra_id, "Seleccione una Obra", new { @id = "obraSelect", @class = "form-control" })
                </div>


                <div class="form-group">
                    <label for="actividadSelect"><strong>Actividad: </strong></label>
                    @Html.DropDownList("ACTIVIDAD_actividad_id", (IEnumerable<SelectListItem>)ViewBag.ACTIVIDAD_actividad_id, "Seleccione una Actividad", new { @id = "actividadSelect", @class = "form-control", @disabled = "disabled" })
                </div>

                <div class="form-group">
                    <label for="loteSelect"><strong>Lote de Inmueble: </strong></label>
                    @Html.DropDownList("lote_id", (IEnumerable<SelectListItem>)ViewBag.LOTE_id, "Seleccione un Lote", new { @id = "loteSelect", @class = "form-control", @disabled = "disabled" })
                </div>

                <div class="form-group">
                    <label for="inmuebleSelect"><strong>Inmueble: </strong></label>
                    @Html.DropDownList("inmueble_id", new List<SelectListItem>(), "Seleccione un Inmueble", new { @id = "inmuebleSelect", @class = "form-control", @disabled = "disabled" })
                </div>

                <p id="fechaCreacionContainer" style="display: none;">
                    <strong>Fecha de emisión: </strong>
                    <span id="fechaCreacionField"></span>
                </p>

                <p id="estadoContainer" style="display: none;">
                    <strong>Estado Final: </strong>
                    <span id="estadoField"></span>
                </p>

                <div class="form-group" id="observacionesContainer" style="display: none;">
                    <label for="observacionesField"><strong>Observaciones Públicas: </strong></label>
                    @Html.TextAreaFor(model => model.Cartilla.observaciones, new { @id = "observacionesField", @class = "form-control" })
                </div>

                <div class="form-group" id="observacionesPrivContainer" style="display: none;">
                    <label for="observacionesPrivField"><strong>Observaciones Privadas: </strong></label>
                    @Html.TextAreaFor(model => model.Cartilla.observaciones_priv, new { @id = "observacionesPrivField", @class = "form-control" })
                </div>

                <table id="detalleTable" class="table">
                    <thead>
                        <tr>
                            <th>Label</th>
                            <th>Item Verificación</th>
                            <th>
                                VB SUPV
                                @Html.CheckBox("selectAllSUPV", new { @class = "select-all", title = "Aprobar Todo", style = "vertical-align: middle;" })
                            </th>
                            <th>VB AC</th>
                            <th>VB F.T.O</th>
                        </tr>
                    </thead>
                    <tbody id="detalleTableBody" style="display: none;">
                        @for (int index = 0; index < Model.DetalleCartillas.Count; index++)
                        {


                            var detalle = Model.DetalleCartillas[index];

                            <tr class="detalle-cartilla"
                                data-cartilla-id="@detalle.CARTILLA_cartilla_id"
                                data-lote-id="@detalle.INMUEBLE.LOTE_INMUEBLE.lote_id"
                                data-inmueble-id="@detalle.INMUEBLE_inmueble_id">

                                <td>@detalle.ITEM_VERIF.label</td>
                                <td>@detalle.ITEM_VERIF.elemento_verificacion</td>

                                @if (Model.DetalleCartillas[index].estado_supv == null)
                                {
                                    <td class="column-supv editable">
                                        @Html.RadioButtonFor(model => model.DetalleCartillas[index].estado_supv, true, new { @id = $"DetalleCartillas_{index}__estado_supv_True", @class = "approval-checkbox" }) Sí
                                        <br />
                                        @Html.RadioButtonFor(model => model.DetalleCartillas[index].estado_supv, false, new { @id = $"DetalleCartillas_{index}__estado_supv_False", @class = "approval-checkbox" }) No
                                    </td>
                                }
                                else
                                {
                                    if (Model.DetalleCartillas[index].estado_supv == true)
                                    {
                                        <td class="column-supv-disabled">
                                            @{
                                                var rutSupv = Model.DetalleCartillas[index].rut_spv;
                                                var supervisorName = string.Empty;

                                                if (!string.IsNullOrEmpty(rutSupv) && ViewBag.SupervisorNames != null && ViewBag.SupervisorNames.ContainsKey(rutSupv))
                                                {
                                                    supervisorName = ViewBag.SupervisorNames[rutSupv];
                                                }
                                            }
                                            @Html.RadioButtonFor(model => model.DetalleCartillas[index].estado_supv, true,
                                          new { @disabled = "disabled", title = $"VB Supervisor: aprobado por {supervisorName}" })
                                            Si
                                        </td>
                                    }
                                    else if (Model.DetalleCartillas[index].estado_supv == false)
                                    {

                                        <td class="column-supv">
                                            @{
                                                var rutSupv = Model.DetalleCartillas[index].rut_spv;
                                                var supervisorName = string.Empty;

                                                if (!string.IsNullOrEmpty(rutSupv) && ViewBag.SupervisorNames != null && ViewBag.SupervisorNames.ContainsKey(rutSupv))
                                                {
                                                    supervisorName = ViewBag.SupervisorNames[rutSupv];
                                                }
                                            }

                                            @Html.RadioButtonFor(model => model.DetalleCartillas[index].estado_supv, true, new { @id = $"DetalleCartillas_{index}__estado_supv_True_EDITAR", @class = "approval-checkbox" }) Sí
                                            <br />
                                            @Html.RadioButtonFor(model => model.DetalleCartillas[index].estado_supv, false,
                                                                         new { @disabled = "disabled", title = $"VB Supervisor: rechazado por {supervisorName}" })
                                            No
                                        </td>
                                    }
                                }


                                <td>
                                    @if (Model.DetalleCartillas[index].estado_autocontrol != null)
                                    {
                                        if (Model.DetalleCartillas[index].estado_autocontrol == true)
                                        {
                                            <i style="color:green;" class="material-icons" data-toggle="tooltip" title="VB Autocontrol: Aprobado">&#xE876;</i>
                                            <span style="display: none;">Sí</span>
                                        }
                                        else if (Model.DetalleCartillas[index].estado_autocontrol == false)
                                        {
                                            <i style="color:maroon;" class="material-icons" data-toggle="tooltip" title="VB Autocontrol: Rechazado">&#xE5CD;</i>
                                            <span style="display: none;">No</span>
                                        }
                                    }
                                    else
                                    {
                                        <i style="font-size: 50px; border: 1px solid black; padding: 5px; text-align: center; margin-bottom: 5px;" class="material-icons" data-toggle="tooltip" title="Sin revisión"></i>
                                    }
                                </td>

                                <td>
                                    @if (Model.DetalleCartillas[index].estado_ito != null)
                                    {
                                        if (Model.DetalleCartillas[index].estado_ito == true)
                                        {
                                            <i style="color:green;" class="material-icons" data-toggle="tooltip" title="VB F.T.O: Aprobado">&#xE876;</i>
                                            <span style="display: none;">Sí</span>
                                        }
                                        else if (Model.DetalleCartillas[index].estado_ito == false)
                                        {
                                            <i style="color:maroon;" class="material-icons" data-toggle="tooltip" title="VB F.T.O: Rechazado">&#xE5CD;</i>
                                            <span style="display: none;">No</span>
                                        }
                                    }
                                    else
                                    {
                                        <i style="font-size: 50px; border: 1px solid black; padding: 5px; text-align: center; margin-bottom: 5px;" class="material-icons" data-toggle="tooltip" title="Sin revisión"></i>
                                    }
                                </td>


                                <!-- Campos ocultos con nombres únicos -->
                                <input type="hidden" name="DetalleCartillas[@index].detalle_cartilla_id" value="@detalle.detalle_cartilla_id" />
                                <input type="hidden" name="DetalleCartillas[@index].item_verif_id" value="@detalle.ITEM_VERIF_item_verif_id" />
                                <input type="hidden" name="DetalleCartillas[@index].inmueble_id" value="@detalle.INMUEBLE_inmueble_id" />
                                <input type="hidden" name="DetalleCartillas[@index].cartilla_id" value="@detalle.CARTILLA_cartilla_id" />
                                @Html.HiddenFor(model => model.DetalleCartillas[@index].ITEM_VERIF.tipo_item, new { @class = "tipo-item" })
                            </tr>
                        }

                    </tbody>
                </table>


                <div style="margin-top: 20px;" class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input style="width: 100%;" id="submitButton" type="submit" value="Guardar Cambios" class="btn btn-primary-custom" disabled />
                </div>


                <div>
                    <a href="@Url.Action("Index", "VistaPerfilSupervisor")" class="btn-custom" style=" width: 100%; padding: 10px 10%; white-space: nowrap;">Volver a la lista</a>
                </div>

            </div>
        </div>
    }

    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function () {
        var cache = {
            actividades: {},
            lotes: {},
            inmuebles: {},
            cartilla: {}
        };

        // Función debounce para mejorar el rendimiento de los cambios en los selectores
        function debounce(func, wait) {
            let timeout;
            return function (...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), wait);
            };
        }

        // Cargar actividades
        function cargarActividades() {
            var obraId = $('#obraSelect').val();

            if (obraId) {
                if (cache.actividades[obraId]) {
                    renderActividades(cache.actividades[obraId]);
                } else {
                    $.ajax({
                        url: '@Url.Action("ObtenerActividadesPorObra", "VistaPerfilSupervisor")',
                        type: 'GET',
                        data: { obraId: obraId },
                        success: function (response) {
                            cache.actividades[obraId] = response;
                            renderActividades(response);
                        },
                        error: function () {
                            $('#actividadSelect').html('<option value="">Error al cargar actividades</option>').prop('disabled', true);
                        }
                    });
                }
            } else {
                $('#actividadSelect').prop('disabled', true);
            }
        }

        // Al seleccionar una actividad
        $('#actividadSelect').change(function () {
            var actividadId = $(this).val();
            $('#observacionesContainer, #observacionesPrivContainer, #fechaCreacionContainer, #estadoContainer').show();

            if (actividadId) {
                $.ajax({
                    url: '@Url.Action("ObtenerCartillaPorActividad", "VistaPerfilSupervisor")',
                    type: 'GET',
                    data: { actividadId: actividadId },
                    success: function (response) {
                        if (response.success) {
                            $('#observacionesField').val(response.observaciones);
                            $('#observacionesPrivField').val(response.observaciones_priv);
                            $('#estadoField').text(response.estado);
                            $('#fechaCreacionField').text(response.fecha);
                            $('#cartillaIdField').val(response.cartillaId);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('Error al obtener la cartilla.');
                    }
                });
            } else {
                $('#observacionesContainer, #observacionesPrivContainer, #fechaCreacionContainer, #estadoContainer').hide();
                $('#observacionesField, #observacionesPrivField').val('');
                $('#fechaCreacionField, #estadoField').text('');
            }
        });

        // Renderizar actividades
        function renderActividades(response) {
            var actividadesHtml = '<option value="">Seleccione una Actividad</option>';
            if (response.length > 0) {
                $.each(response, function (index, actividad) {
                    actividadesHtml += `<option value="${actividad.actividadId}">${actividad.nombreActividad}</option>`;
                });
            } else {
                actividadesHtml += '<option value="">No hay actividades disponibles</option>';
            }
            $('#actividadSelect').html(actividadesHtml).prop('disabled', false);
        }

        // Cargar lotes e inmuebles
        function cargarLotesYInmuebles() {
            var obraId = $('#obraSelect').val();
            if (obraId) {
                if (cache.lotes[obraId]) {
                    renderLotes(cache.lotes[obraId]);
                } else {
                    $.ajax({
                        url: '@Url.Action("ObtenerLotesPorObra", "VistaPerfilSupervisor")',
                        type: 'GET',
                        data: { obraId: obraId },
                        success: function (response) {
                            cache.lotes[obraId] = response;
                            renderLotes(response);
                        },
                        error: function () {
                            $('#loteSelect').html('<option value="">Error al cargar lotes</option>').prop('disabled', true);
                        }
                    });
                }
            } else {
                $('#loteSelect').prop('disabled', true);
            }
        }

        // Renderizar lotes
        function renderLotes(response) {
            var lotesHtml = '<option value="">Seleccione un Lote</option>';
            if (response.length > 0) {
                $.each(response, function (index, lote) {
                    lotesHtml += `<option value="${lote.LoteId}">${lote.NombreLote}</option>`;
                });
            } else {
                lotesHtml += '<option value="">No hay lotes disponibles</option>';
            }
            $('#loteSelect').html(lotesHtml).prop('disabled', false);
        }

        // Cargar inmuebles
        function cargarInmuebles() {
            var loteId = $('#loteSelect').val();
            if (loteId) {
                if (cache.inmuebles[loteId]) {
                    renderInmuebles(cache.inmuebles[loteId]);
                } else {
                    $.ajax({
                        url: '@Url.Action("ObtenerInmueblesPorLote", "VistaPerfilSupervisor")',
                        type: 'GET',
                        data: { loteId: loteId },
                        success: function (response) {
                            cache.inmuebles[loteId] = response;
                            renderInmuebles(response);
                        },
                        error: function () {
                            $('#inmuebleSelect').html('<option value="">Error al cargar inmuebles</option>').prop('disabled', true);
                        }
                    });
                }
            } else {
                $('#inmuebleSelect').prop('disabled', true);
            }
        }

        // Renderizar inmuebles
        function renderInmuebles(response) {
            var inmueblesHtml = '<option value="">Seleccione un Inmueble</option>';
            if (response.length > 0) {
                $.each(response, function (index, inmueble) {
                    inmueblesHtml += `<option value="${inmueble.inmuebleId}">${inmueble.nombreInmueble}</option>`;
                });
            } else {
                inmueblesHtml += '<option value="">No hay inmuebles disponibles</option>';
            }
            $('#inmuebleSelect').html(inmueblesHtml).prop('disabled', false);
        }

        // Manejo de cambios en los selects
        $('#obraSelect').change(function () {
            $('#actividadSelect, #loteSelect, #inmuebleSelect').val('').prop('disabled', true);
            cargarActividades();
        });

        $('#actividadSelect').change(function () {
            cargarLotesYInmuebles();
        });

        $('#loteSelect').change(function () {
            cargarInmuebles();
        });

        // Filtrar filas en la tabla
        function filtrarFilas() {
            var cartillaId = $('#cartillaIdField').val();
            var loteId = $('#loteSelect').val();
            var inmuebleId = $('#inmuebleSelect').val();
            var hasVisibleRows = false;

            $('#detalleTableBody tr').each(function () {
                var rowCartillaId = $(this).data('cartilla-id');
                var rowLoteId = $(this).data('lote-id');
                var rowInmuebleId = $(this).data('inmueble-id');

                if (rowCartillaId == cartillaId && rowLoteId == loteId && rowInmuebleId == inmuebleId) {
                    $(this).show();
                    hasVisibleRows = true;
                } else {
                    $(this).hide();
                }
            });

            $('#detalleTableBody').toggle(hasVisibleRows);
        }

        // Verificar estado del botón al cargar la página
        function checkButtonState() {
            var obraSelected = $('#obraSelect').val() !== '';
            var actividadSelected = $('#actividadSelect').val() !== '';
            var loteSelected = $('#loteSelect').val() !== '';
            var inmuebleSelected = $('#inmuebleSelect').val() !== '';
            $('#submitButton').prop('disabled', !(obraSelected && actividadSelected && loteSelected && inmuebleSelected));
        }

        // Inicialización de eventos
        $('#obraSelect').change(debounce(function () {
            cargarActividades();
            checkButtonState();
        }, 300));

        $('#actividadSelect').change(debounce(function () {
            cargarLotesYInmuebles();
            checkButtonState();
        }, 300));

        $('#loteSelect').change(debounce(function () {
            cargarInmuebles();
            checkButtonState();
        }, 300));

        $('#inmuebleSelect').change(debounce(function () {
            filtrarFilas();
            checkButtonState();
        }, 300));

        // Verificar el estado del botón al cargar la página
        checkButtonState();
    });
    </script>
    <script>
        $(document).ready(function () {
            // Función para verificar y deshabilitar o habilitar el detalle-cartilla con tipo_item = true
            function verificarEstadoSupervisor() {
                var loteId = $('#loteSelect').val();
                var inmuebleId = $('#inmuebleSelect').val();
                var cartillaId = $('#cartillaIdField').val();

                var todosTipoItemFalseTrue = true;

                // Buscar todos los detalle-cartilla que tienen tipo_item = false y verificar su estado_supv
                $('.detalle-cartilla[data-cartilla-id="' + cartillaId + '"][data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]').each(function () {
                    var tipoItem = $(this).find('.tipo-item').val();

                    // Obtener estado de supervisor editable
                    var estadoSupervisorTrue = $(this).find('.column-supv input[type="radio"][value="True"]').is(':checked');

                    // Obtener estado de supervisor deshabilitado
                    var estadoSupervisorDisabled = $(this).find('.column-supv-disabled input[type="radio"][value="True"]').is(':disabled');

                    // Si es un tipo_item "False", verificar si está aprobado o no (true o deshabilitado)
                    if (tipoItem === "False") {
                        // Si no está aprobado ni desde la base de datos (disabled) ni en la vista
                        if (!estadoSupervisorTrue && !estadoSupervisorDisabled) {
                            todosTipoItemFalseTrue = false;
                            return false; // Salir del loop si encontramos un estado que no es true
                        }
                    }
                });

                // Buscar el detalle-cartilla que tiene tipo_item = true y habilitarlo/deshabilitarlo según la verificación
                $('.detalle-cartilla[data-cartilla-id="' + cartillaId + '"][data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]').each(function () {
                    var tipoItem = $(this).find('.tipo-item').val();
                    if (tipoItem === "True") {
                        var $radioTrue = $(this).find('.column-supv input[type="radio"][value="True"]');

                        // Deshabilitar si no todos los tipo_item = false están aprobados
                        $radioTrue.prop('disabled', !todosTipoItemFalseTrue);
                        if (todosTipoItemFalseTrue) {
                            $radioTrue.prop('checked', true);
                        } else {
                            $radioTrue.prop('checked', false);
                        }
                    }
                });
            }

            // Llamar a la función al cargar la página y al cambiar los filtros
            verificarEstadoSupervisor();

            // Manejar el cambio en el filtro de lote
            $('#loteSelect').change(function () {
                // Desmarcar el checkbox selectAllSUPV cada vez que se cambie un filtro
                $('#selectAllSUPV').prop('checked', false);

                // Llamar a verificarEstadoSupervisor directamente sin delay
                verificarEstadoSupervisor();
            });

            // Manejar el cambio en el filtro de inmueble
            $('#inmuebleSelect').change(function () {
                // Desmarcar el checkbox selectAllSUPV cada vez que se cambie un filtro
                $('#selectAllSUPV').prop('checked', false);

                // Llamar a verificarEstadoSupervisor directamente
                verificarEstadoSupervisor();
            });

            // Manejar el cambio en los radio buttons de estado_supv
            $('#detalleTable').on('change', '.column-supv input[type="radio"]', function () {
                verificarEstadoSupervisor();
            });

            // Script para el checkbox selectAllSUPV
            $('#selectAllSUPV').change(function () {
                var isChecked = $(this).prop('checked');

                // Obtener los radio buttons de la columna VB SUPV que están visibles
                var $visibleRadios = $('td.column-supv:visible');

                // Establecer el estado de los radio buttons visibles según el estado del checkbox selectAllSUPV
                $visibleRadios.each(function () {
                    var detalleCartilla = $(this).closest('.detalle-cartilla');
                    var tipoItem = detalleCartilla.find('.tipo-item').val();
                    if (isChecked && tipoItem !== "True") {
                        // Si el checkbox está marcado y tipo_item no es true, establecer estado_supv a true
                        $(this).find('input[type="radio"][value="True"]').prop('checked', true);
                    } else {
                        // Si el checkbox no está marcado o tipo_item es true, establecer estado_supv a null
                        $(this).find('input[type="radio"][value="True"]').prop('checked', false);
                        $(this).find('input[type="radio"][value="False"]').prop('checked', false);
                    }
                });

                // Verificar el estado de supervisor después de actualizar los radio buttons
                verificarEstadoSupervisor();
            });
        });

    </script>
}
else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Supervisor</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}
