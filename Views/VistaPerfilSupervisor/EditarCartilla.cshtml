@model Proyecto_Cartilla_Autocontrol.Models.ViewModels.CartillasViewModel

@{
    ViewBag.Title = "Editar Cartilla";
    var usuarioActualRut = ViewBag.RutUsuarioAutenticado as string;
}


@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Supervisor")
{
    Layout = "~/Views/Shared/_Layout_Supv.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}


@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Supervisor")
{

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit_movil.css">
    <link rel="stylesheet" href="~/Content/css/items_movil.css">
    <link rel="stylesheet" href="~/Content/css/loading.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />



    <!-- Fondo semitransparente -->
    <div id="loadingOverlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); z-index: 9998;"></div>

    <!-- Spinner de carga -->
    <div id="loadingSpinner" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 9999;">
        <i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color: #fff;"></i>
        <span class="sr-only">Cargando...</span>
    </div>
    <script>
        $(document).ready(function () {
            $('#loadingOverlay').show();
            $('#loadingSpinner').show();

            $(document).ready(function () {
                $('#loadingOverlay').hide();
                $('#loadingSpinner').hide();
            });
        });

    </script>
    using (Html.BeginForm("EditarCartilla", "VistaPerfilSupervisor", FormMethod.Post))
    {
        <!-- Agregar al final de la vista -->
        <div style="position: fixed; right: 20px; bottom: 20px; text-align: center;" class="scroll-down-button">
            <a href="#" id="scrollDownLink" style="display: inline-block; text-decoration: none; padding: 10px; background-color: #585858; color: #fff; border-radius: 5px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2); transition: background-color 0.3s, box-shadow 0.3s;"
               onmouseover="this.style.backgroundColor='#474747'; this.style.boxShadow='0px 0px 15px rgba(0, 0, 0, 0.3)';"
               onmouseout="this.style.backgroundColor='#585858'; this.style.boxShadow='0px 0px 10px rgba(0, 0, 0, 0.2)';">
                <i style="color: #F67122; font-size: 30px;" class="fa-solid fa-circle-down"></i>
                Bajar
            </a>
        </div>

        <div class="container-formularios">
            <div class="form-container">
                <h2>Editar Cartilla Autocontrol </h2>
                <form>
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Cartilla.cartilla_id) <!-- Campo oculto para el ID de la cartilla -->
                    <!-- Mostrar datos de la cartilla -->
                    @Html.HiddenFor(model => model.Cartilla.fecha)
                    @Html.HiddenFor(model => model.Cartilla.OBRA_obra_id)
                    @Html.HiddenFor(model => model.Cartilla.ACTIVIDAD_actividad_id)
                    @Html.HiddenFor(model => model.Cartilla.ESTADO_FINAL_estado_final_id)
                    @Html.HiddenFor(model => model.Cartilla.enviar_correo)

                    <div class="form-group">
                        <p> <strong> Fecha de emisión:  </strong>  @Html.DisplayFor(model => model.Cartilla.fecha)</p>
                        <p> <strong> Actividad:  </strong>  @Html.DisplayFor(model => model.Cartilla.ACTIVIDAD.codigo_actividad) - @Html.DisplayFor(model => model.Cartilla.ACTIVIDAD.nombre_actividad)</p>
                        <p> <strong> Obra:  </strong>  @Html.DisplayFor(model => model.Cartilla.OBRA.nombre_obra)</p>
                        <p> <strong> Estado Final:  </strong> @Html.DisplayFor(model => model.Cartilla.ESTADO_FINAL.descripcion) </p>
                        <div>
                            <label for="Observaciones"><strong>Observaciones Públicas</strong></label>
                            @Html.TextAreaFor(model => model.Cartilla.observaciones, new { rows = 3, cols = 73, @class = "form-control" })
                        </div>
                        <div>
                            <label for="Observaciones"><strong>Observaciones Privadas</strong></label>
                            @Html.TextAreaFor(model => model.Cartilla.observaciones_priv, new { rows = 3, cols = 73, @class = "form-control" })
                        </div>

                        <div class="form-group">
                            <label for="Observaciones"><strong>Lote de Inmueble</strong></label>
                            @Html.DropDownList("lote_id", ViewBag.LoteList as SelectList, "Seleccione Lote de Inmueble", new { @class = "form-control ddlLote" })
                        </div>
                        <div class="form-group">
                            <label for="Observaciones"><strong>Inmueble</strong></label>
                            @Html.DropDownList("inmueble_id", ViewBag.InmueblePorLote as SelectList, "Seleccione Inmueble", new { @class = "form-control ddlInmueblePorLote" })
                        </div>


                        @if (Model.Cartilla.fecha_modificacion != null)
                        {
                            <div id="revisionDosSection" style="display: none;">
                                <div class="form-group-rev">
                                    <label><strong>¿Es revisado por segunda vez?</strong></label>
                                    <input type="checkbox" id="revisionDosCheckbox" disabled />
                                </div>
                            </div>


                        }
                    </div>
                    <!-- Tabla para mostrar los campos -->
                    <table id="detalleTable" class="hidden">
                        <thead>
                            <tr>
                                <th>Label</th>
                                <th>Item Verificación</th>
                                <th style="white-space: nowrap;">
                                    VB SUPV
                                    @Html.CheckBox("selectAllSUPV", new { @class = "select-all", title = "Aprobar Todo", style = "vertical-align: middle;" })
                                </th>
                                <th style="text-align: center;">
                                    VB AC

                                </th>
                                <th style="text-align: center;">
                                    VB F.T.O

                                </th>
                            </tr>
                        </thead>
                        <tbody id="contenedorRegistros">
                            @for (int i = 0; i < Model.DetalleCartillas.Count; i++)
                            {


                                <tr class="detalle-cartilla" data-lote-id="@Model.DetalleCartillas[i].INMUEBLE.LOTE_INMUEBLE.lote_id" data-inmueble-id="@Model.DetalleCartillas[i].INMUEBLE.inmueble_id">
                                    @Html.HiddenFor(model => model.DetalleCartillas[i].detalle_cartilla_id) <!-- Campo oculto para el ID del detalle -->
                                    @Html.HiddenFor(model => model.DetalleCartillas[i].CARTILLA_cartilla_id)
                                    @Html.HiddenFor(model => model.DetalleCartillas[i].ITEM_VERIF_item_verif_id)
                                    @Html.HiddenFor(model => model.DetalleCartillas[i].ITEM_VERIF.tipo_item, new { @class = "tipo-item" })
                                    @Html.HiddenFor(model => model.DetalleCartillas[i].INMUEBLE_inmueble_id)

                                    <td style="font-size: 12px">
                                        @Html.DisplayFor(model => model.DetalleCartillas[i].ITEM_VERIF.label)
                                    </td>
                                    <td style="font-size: 12px">
                                        @Html.DisplayFor(model => model.DetalleCartillas[i].ITEM_VERIF.elemento_verificacion)
                                    </td>


                                    @if (Model.DetalleCartillas[i].estado_supv == null)
                                    {
                                        <td class="column-supv">
                                            @Html.RadioButtonFor(model => model.DetalleCartillas[i].estado_supv, true) Sí
                                            <br />
                                            @Html.RadioButtonFor(model => model.DetalleCartillas[i].estado_supv, false) No
                                        </td>

                                    }
                                    else
                                    {
                                        if (Model.DetalleCartillas[i].estado_supv == true)
                                        {

                                            <td class="column-supv-disabled">
                                                @{
                                                    var rutSupv = Model.DetalleCartillas[i].rut_spv;
                                                    var supervisorName = string.Empty;

                                                    if (!string.IsNullOrEmpty(rutSupv) && ViewBag.SupervisorNames != null && ViewBag.SupervisorNames.ContainsKey(rutSupv))
                                                    {
                                                        supervisorName = ViewBag.SupervisorNames[rutSupv];
                                                    }
                                                }
                                                @Html.RadioButtonFor(model => model.DetalleCartillas[i].estado_supv, true,
                                                    new { @disabled = "disabled", title = $"VB Supervisor: aprobado por {supervisorName}" })
                                                Si
                                            </td>


                                        }
                                        else if (Model.DetalleCartillas[i].estado_supv == false)
                                        {


                                            <td class="column-supv">
                                                @{
                                                    var rutSupv = Model.DetalleCartillas[i].rut_spv;
                                                    var supervisorName = string.Empty;

                                                    if (!string.IsNullOrEmpty(rutSupv) && ViewBag.SupervisorNames != null && ViewBag.SupervisorNames.ContainsKey(rutSupv))
                                                    {
                                                        supervisorName = ViewBag.SupervisorNames[rutSupv];
                                                    }
                                                }
                                                @Html.RadioButtonFor(model => model.DetalleCartillas[i].estado_supv, true) Sí
                                                <br />
                                                @Html.RadioButtonFor(model => model.DetalleCartillas[i].estado_supv, false,
                                                new { title = $"VB Supervisor: rechazado por {supervisorName}" })
                                                No
                                            </td>


                                        }

                                    }


                                    <td>
                                        @if (Model.DetalleCartillas[i].estado_autocontrol != null)
                                        {
                                            if (Model.DetalleCartillas[i].estado_autocontrol == true)
                                            {
                                                <i style="color:green;" class="material-icons" data-toggle="tooltip" title="VB Autocontrol: Aprobado">&#xE876;</i>
                                                <span style="display: none;">Sí</span>
                                            }
                                            else if (Model.DetalleCartillas[i].estado_autocontrol == false)
                                            {
                                                <i style="color:maroon;" class="material-icons" data-toggle="tooltip" title="VB Autocontrol: Rechazado">&#xE5CD;</i>
                                                <span style="display: none;">No</span>
                                            }
                                        }
                                        else
                                        {
                                            <i style="font-size: 50px; border: 1px solid black; padding: 5px; text-align: center; margin-bottom: 5px;" class="material-icons" data-toggle="tooltip" title="Sin revisión"></i>
                                        }
                                    </td>
                                    <td>
                                        @if (Model.DetalleCartillas[i].estado_ito != null)
                                        {
                                            if (Model.DetalleCartillas[i].estado_ito == true)
                                            {
                                                <i style="color:green;" class="material-icons" data-toggle="tooltip" title="VB F.T.O: Aprobado">&#xE876;</i>
                                                <span style="display: none;">Sí</span>
                                            }
                                            else if (Model.DetalleCartillas[i].estado_ito == false)
                                            {
                                                <i style="color:maroon;" class="material-icons" data-toggle="tooltip" title="VB F.T.O: Rechazado">&#xE5CD;</i>
                                                <span style="display: none;">No</span>
                                            }
                                        }
                                        else
                                        {
                                            <i style="font-size: 50px; border: 1px solid black; padding: 5px; text-align: center; margin-bottom: 5px;" class="material-icons" data-toggle="tooltip" title="Sin revisión"></i>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div style=" margin-top: 20px;" class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input style="width: 100%;" type="submit" value="Guardar Cambios" id="submitButton" class="btn btn-primary-custom" />
                    </div>
                    <div>
                        <a style="width: 100%;" href="@Url.Action("Index")" class="btn-custom" style="padding: 10px 43.5%; white-space: nowrap;">Volver a la lista</a>
                    </div>
                </form>
            </div>
        </div>
    }
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Al cargar la página, el dropdown de inmueble estará deshabilitado
            $('.ddlInmueblePorLote').prop('disabled', true);

            // Evento cuando se cambia la selección del dropdown de lote
            $('.ddlLote').change(function () {
                var loteSeleccionado = $(this).val();

                // Si se ha seleccionado un lote (no es el valor por defecto)
                if (loteSeleccionado !== "" && loteSeleccionado !== "Seleccione Lote de Inmueble") {
                    // Habilitar el dropdown de inmueble
                    $('.ddlInmueblePorLote').prop('disabled', false);
                } else {
                    // Si no se selecciona lote, deshabilitar el dropdown de inmueble
                    $('.ddlInmueblePorLote').prop('disabled', true);
                }
            });
        });

    </script>
    <script>
        $(document).ready(function () {
            $('form').submit(function (e) {
                $('#loadingOverlay').show();
                $('#loadingSpinner').show();
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#scrollDownLink').click(function () {
                $('html, body').animate({
                    scrollTop: $('#submitButton').offset().top
                }, 10);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            function filtrarTabla() {
                var selectedLoteId = $('.ddlLote').val();
                var selectedInmuebleId = $('.ddlInmueblePorLote').val();

                // Verificar que ambos filtros estén seleccionados y no sean los mensajes predeterminados
                if (selectedLoteId && selectedLoteId !== "Seleccione Lote de Inmueble" &&
                    selectedInmuebleId && selectedInmuebleId !== "Seleccione Inmueble") {

                    // Mostrar filas que coincidan con los filtros seleccionados
                    $('.detalle-cartilla').hide(); // Asegúrate de que las filas estén ocultas antes de mostrar las coincidencias
                    $('.detalle-cartilla[data-lote-id="' + selectedLoteId + '"][data-inmueble-id="' + selectedInmuebleId + '"]').show();

                    // Mostrar la tabla después de aplicar el filtro
                    $('#detalleTable').removeClass('hidden');
                } else {
                    // Si no se han seleccionado ambos filtros válidos, ocultar todas las filas
                    $('.detalle-cartilla').hide();
                }
            }


            // Manejar el evento de cambio en la lista desplegable de lote
            $('.ddlLote').change(function () {
                var loteId = $(this).val(); // Obtener el ID del lote seleccionado

                // Hacer una solicitud AJAX para obtener los inmuebles correspondientes al lote seleccionado
                $.ajax({
                    url: '/CartillaActualizada/GetInmueblesByLote',
                    type: 'GET',
                    data: { loteId: loteId },
                    success: function (data) {
                        // Actualizar la lista desplegable de inmueble con los inmuebles correspondientes
                        var inmuebleDropdown = $('.ddlInmueblePorLote');
                        inmuebleDropdown.empty(); // Limpiar la lista desplegable

                        // Agregar la opción por defecto de "SELECCIONE INMUEBLE"
                        inmuebleDropdown.append($('<option></option>').text("Seleccione Inmueble").val(""));

                        // Agregar nuevas opciones a la lista desplegable de inmueble
                        $.each(data, function (index, item) {
                            inmuebleDropdown.append($('<option></option>').text(item.Text).val(item.Value));
                        });

                        // Después de actualizar la lista desplegable de inmueble, llamar a la función para filtrar la tabla
                        filtrarTabla();
                    }
                });
            });

            // Manejar el evento de cambio en la lista desplegable de inmueble
            $('.ddlInmueblePorLote').change(function () {
                // Después de cambiar la opción de la lista desplegable de inmueble, llamar a la función para filtrar la tabla
                filtrarTabla();
            });

            // Ocultar todas las filas inicialmente
            $('.detalle-cartilla').hide();
        });
    </script>
    <script>
        $(document).ready(function () {
            // Función para verificar y habilitar o deshabilitar el detalle-cartilla con tipo_item = true
            function verificarEstadoSupervisor() {
                var loteId = $('.ddlLote').val();
                var inmuebleId = $('.ddlInmueblePorLote').val();

                var todosTipoItemFalseTrue = true;

                // Buscar todos los detalle-cartilla que tienen tipo_item = false y verificar su estado_supv
                $('.detalle-cartilla[data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]').each(function () {
                    var tipoItem = $(this).find('.tipo-item').val();

                    // Obtener estado de supervisor (puede estar deshabilitado o ser editable)
                    var estadoSupervisorTrue = $(this).find('.column-supv input[type="radio"][value="True"]').is(':checked');
                    var estadoSupervisorDisabled = $(this).find('.column-supv-disabled input[type="radio"][value="True"]').is(':disabled');

                    // Si es un tipo_item "False", verificar si está aprobado o no (true o deshabilitado)
                    if (tipoItem === "False") {
                        // Si no está aprobado ni desde la base de datos (disabled) ni en la vista
                        if (!estadoSupervisorTrue && !estadoSupervisorDisabled) {
                            todosTipoItemFalseTrue = false;
                            return false; // Salir del loop si encontramos un estado que no es true
                        }
                    }
                });

                // Buscar el detalle-cartilla que tiene tipo_item = true y habilitarlo/deshabilitarlo según la verificación
                $('.detalle-cartilla[data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]').each(function () {
                    var tipoItem = $(this).find('.tipo-item').val();
                    if (tipoItem === "True") {
                        var $radioTrue = $(this).find('.column-supv input[type="radio"][value="True"]');

                        // Deshabilitar si no todos los tipo_item = false están aprobados
                        $radioTrue.prop('disabled', !todosTipoItemFalseTrue);
                        if (todosTipoItemFalseTrue) {
                            $radioTrue.prop('checked', true);
                        } else {
                            $radioTrue.prop('checked', false);
                        }
                    }
                });
            }

            // Llamar a la función al cargar la página y al cambiar los filtros
            verificarEstadoSupervisor();

            // Manejar el cambio en el filtro de lote
            $('.ddlLote').change(function () {
                $('#selectAllSUPV').prop('checked', false); // Desmarcar checkbox selectAllSUPV

                // Agregar retraso para permitir que ddlInmueblePorLote se actualice
                setTimeout(function () {
                    verificarEstadoSupervisor();
                }, 500); // Ajustar el tiempo según sea necesario
            });

            // Manejar el cambio en el filtro de inmueble
            $('.ddlInmueblePorLote').change(function () {
                verificarEstadoSupervisor();
                $('#selectAllSUPV').prop('checked', false); // Desmarcar checkbox selectAllSUPV
            });

            // Manejar el cambio en los radio buttons de estado_supv
            $('#detalleTable').on('change', '.column-supv input[type="radio"]', function () {
                verificarEstadoSupervisor();
            });

            // Script para el checkbox selectAllSUPV
            $('#selectAllSUPV').change(function () {
                var isChecked = $(this).prop('checked');

                // Obtener los radio buttons visibles de la columna VB SUPV
                var $visibleRadios = $('td.column-supv:visible');

                // Establecer el estado de los radio buttons visibles según el checkbox selectAllSUPV
                $visibleRadios.each(function () {
                    var detalleCartilla = $(this).closest('.detalle-cartilla');
                    var tipoItem = detalleCartilla.find('.tipo-item').val();

                    // Si el checkbox está marcado y tipo_item no es true, establecer estado_supv en true
                    if (isChecked && tipoItem !== "True") {
                        $(this).find('input[type="radio"][value="True"]').prop('checked', true);
                    } else {
                        // Si el checkbox no está marcado o tipo_item es true, establecer estado_supv en false
                        $(this).find('input[type="radio"][value="True"]').prop('checked', false);
                        $(this).find('input[type="radio"][value="False"]').prop('checked', false);
                    }
                });

                // Verificar el estado de supervisor después de actualizar los radio buttons
                verificarEstadoSupervisor();
            });
        });
    </script>
    <script>
  $(document).ready(function () {
    // Función para obtener y establecer el estado del checkbox
    function actualizarEstadoCheckbox(loteId, inmuebleId) {
        $.ajax({
            url: '@Url.Action("ObtenerEstadoRevisionDos", "CartillaActualizada")', // URL de acción para obtener el estado
            type: 'GET', // Usar GET para obtener datos
            data: {
                loteId: loteId,
                inmuebleId: inmuebleId
            },
            success: function (response) {
                // Actualizar el estado del checkbox
                $('#revisionDosCheckbox').prop('checked', response.revisionDos);
            },
            error: function () {
                console.log('Error al obtener el estado de revisión.');
            }
        });
    }

    // Función para manejar la visibilidad de la sección de revisión
    function manejarVisibilidadRevisionDos() {
        var loteId = $('.ddlLote').val();
        var inmuebleId = $('.ddlInmueblePorLote').val();

        if (loteId && inmuebleId) {
            $('#revisionDosSection').show();
            actualizarEstadoCheckbox(loteId, inmuebleId);
        } else {
            $('#revisionDosSection').hide();
        }
    }

    // Obtener los valores iniciales de los filtros al cargar la página
    manejarVisibilidadRevisionDos();

    // Evento para detectar cambios en los filtros y actualizar la visibilidad
    $('.ddlLote, .ddlInmueblePorLote').change(function () {
        manejarVisibilidadRevisionDos();
    });
});
    </script>
    <script>
        $(document).ready(function () {
            // Función para verificar si algún campo estado_autocontrol no está seleccionado
            function verificarEstadoAutocontrol() {
                var loteId = $('.ddlLote').val();
                var inmuebleId = $('.ddlInmueblePorLote').val();

                var detallesNoSeleccionados = $('.detalle-cartilla[data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]')
                    .find('.column-ac input[type="radio"]:not(:checked)')
                    .length;

                // Deshabilitar el último detalle-cartilla si hay algún campo estado_autocontrol no seleccionado
                if (detallesNoSeleccionados > 0) {
                    $('#detalleTable .detalle-cartilla[data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]:last .column-ac input[type="radio"]').prop('disabled', true);
                } else {
                    $('#detalleTable .detalle-cartilla[data-lote-id="' + loteId + '"][data-inmueble-id="' + inmuebleId + '"]:last .column-ac input[type="radio"]').prop('disabled', false);
                }
            }

            // Llamar a la función al cargar la página y al cambiar los filtros
            verificarEstadoAutocontrol();

            $('.ddlLote, .ddlInmueblePorLote').change(function () {
                verificarEstadoAutocontrol();
            });

            // Manejar el cambio en los radio buttons de estado_autocontrol
            $('#detalleTable').on('change', '.column-ac input[type="radio"]', function () {
                verificarEstadoAutocontrol();
            });
        });

    </script>
    <script>
        $(document).ready(function () {
            // Obtener el lote_id seleccionado
            var loteId = $('.ddlLote').val();

            // Llamada AJAX para obtener el estado de los inmuebles
            $.ajax({
                url: '@Url.Action("ObtenerEstadoInmuebles", "VistaPerfilSupervisor")', // Reemplaza 'Controlador' con el nombre de tu controlador
                data: { loteId: loteId },
                type: "GET",
                success: function (data) {
                    // Iterar sobre las opciones del DropDownList
                    $('.ddlInmueblePorLote option').each(function () {
                        var option = $(this);
                        var inmuebleId = option.val();

                        // Buscar si el inmuebleId está en la respuesta AJAX con allSupvTrue = true
                        var inmuebleEstado = data.find(x => x.inmuebleId == inmuebleId);
                        if (inmuebleEstado && inmuebleEstado.allSupvTrue) {
                            option.css('background-color', 'green'); // Cambia el fondo a verde
                            option.css('color', '#D1D1D1'); // Cambia el fondo a verde
                            option.prop('disabled', true); // Deshabilitar la opción
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error al obtener el estado de los inmuebles: ", error);
                }
            });
        });
    </script>
    <script>
 // Script para manejar la expiración de la sesión
 setTimeout(function () {
     window.location.href = '@Url.Action("Login", "Account")';
 }, 43200000); // 12 horas en milisegundos
    </script>
}
else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para perfil Supervisor</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}

