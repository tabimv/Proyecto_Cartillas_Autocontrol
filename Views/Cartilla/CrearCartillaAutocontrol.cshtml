@model Proyecto_Cartilla_Autocontrol.Models.ViewModels.CrearCartillaViewModel
@{
    ViewBag.Title = "Crear Cartilla";
    Func<string, string> TruncateActivityName = (name) =>
    {
        if (name.Length > 80)
        {
            return name.Substring(0, 80) + "..."; // Truncar y agregar puntos suspensivos si es necesario
        }
        return name;
    };

}
@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}
@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">
    <link rel="stylesheet" href="~/Content/css/items.css">
    <link rel="stylesheet" href="~/Content/css/loading.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    using (Html.BeginForm("CrearCartillaAutocontrol", "Cartilla", FormMethod.Post))
    {


        <div class="container-formularios">
            <div class="form-container">
                <h2>Crear Cartilla Autocontrol</h2>
                <form>
                    @Html.AntiForgeryToken()

                    @if (Model.Obras != null && Model.Obras.Any())
                    {
                        <div class="form-group">
                            @Html.Label("Obra Asociada:")
                            @Html.DropDownList("obra_id", new SelectList(Model.Obras, "obra_id", "nombre_obra"), "Seleccione una obra", new { @class = "form-control", id = "Cartilla_OBRA_obra_id" })
                        </div>
                    }
                    else
                    {
                        <p>No hay obras disponibles para crear una cartilla de autocontrol.</p>
                    }


                    @if (Model.Actividades != null && Model.Actividades.Any())
                    {
                        <div class="form-group">
                            @Html.Label("Actividad Asociada:")
                            <select id="Cartilla_ACTIVIDAD_actividad_id" name="actividad_id" class="form-control" disabled>
                                <option value="">Seleccione una Actividad</option>
                                @foreach (var actividad in Model.Actividades)
                                {
                                    <option value="@actividad.actividad_id" title="@actividad.nombre_actividad">
                                        @TruncateActivityName(actividad.nombre_actividad)
                                    </option>
                                }
                            </select>
                        </div>


                    }
                    else
                    {
                        <p>No hay actividades disponibles para crear una cartilla de autocontrol.</p>
                    }

                    <div style=" margin-top: 20px;" class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input style="width: 100%;" type="submit" value="Crear" id="submitButton" class="btn btn-primary-custom" @(Model.Obras == null || !Model.Obras.Any() || Model.Actividades == null || !Model.Actividades.Any() ? "disabled" : "") />
                    </div>

                    <div>
                        <a href="@Url.Action("Index")" style="padding: 10px; width: 100%;" class="btn-custom">Volver a la lista</a>
                    </div>
                </form>
            </div>
        </div>
    }
    <div id="loadingOverlay"></div> <!-- Fondo semi transparente -->
    <div id="loadingSpinner" style="display: none; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 9999;">
        <i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>
        <span class="sr-only">Cargando...</span>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
$(document).ready(function () {
    // Mostrar overlay y spinner cuando se envía el formulario
    $('form').submit(function () {
        $('#loadingOverlay').show();
        $('#loadingSpinner').show();
    });

    // Función debounce para limitar la frecuencia de las llamadas a la API
    function debounce(func, wait) {
        let timeout;
        return function() {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, arguments), wait);
        };
    }

    // Manejar cambios en el selector de obra
    $('#Cartilla_OBRA_obra_id').change(debounce(function () {
        const selectedObraId = $(this).val();
        if (selectedObraId) {
            // Habilitar el dropdown de actividades y ocultar la opción por defecto
            $('#Cartilla_ACTIVIDAD_actividad_id').prop('disabled', false).find('option:first').hide();
            cargarActividades(selectedObraId);
        } else {
            // Deshabilitar el dropdown de actividades si no se selecciona ninguna obra
            $('#Cartilla_ACTIVIDAD_actividad_id').prop('disabled', true).find('option:first').show().prop('selected', true).end().empty().append('<option value="">Seleccione una Actividad</option>');
        }
    }, 300));

    // Función para cargar actividades
    function cargarActividades(obraId) {
        $('#loadingOverlay').show();
        $('#loadingSpinner').show();

        $.ajax({
            url: '@Url.Action("GetActividadByObra", "Cartilla")',
            type: 'GET',
            data: { obraId: obraId },
            success: function (data) {
                let opciones = data.map(item =>
                    $('<option>', { value: item.actividadId, text: item.nombreActividad })
                );
                const $actividadSelect = $('#Cartilla_ACTIVIDAD_actividad_id');
                $actividadSelect.empty().append(opciones);
                if (data.length > 0) {
                    // Opcional: Aquí podrías manejar algún dato adicional si es necesario
                }
            },
            error: function () {
                console.error('Error al obtener las actividades asociadas a la obra');
            },
            complete: function () {
                $('#loadingOverlay').hide();
                $('#loadingSpinner').hide();
            }
        });
    }
});
    </script>
    <script>
        // Script para manejar la expiración de la sesión
        setTimeout(function () {
            window.location.href = '@Url.Action("Login", "Account")';
        }, 43200000); // 12 horas en milisegundos
    </script>
}
else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Administrador</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}