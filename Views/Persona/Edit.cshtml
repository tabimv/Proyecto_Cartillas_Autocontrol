@model Proyecto_Cartilla_Autocontrol.Models.PERSONA

@{
    ViewBag.Title = "Create";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-formularios">
            <div class="form-container">
                <h2>Editar Persona</h2>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.rut)

                <div class="form-group">
                    @Html.LabelFor(model => model.rut, "Rut: ", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.rut, new { htmlAttributes = new { @class = "form-control", placeholder = "Rut sin puntos con guión", onchange = "validarRut(this.value)", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.rut, "", new { @class = "text-danger" })
                    <div id="mensajeErrorRut" class="text-danger"></div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.apeliido_paterno, "Apellido Paterno", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.apeliido_paterno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.apeliido_paterno, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.apellido_materno, "Apellido Materno", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.apellido_materno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.apellido_materno, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.correo, "Correo Electrónico", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Guardar Cambios" class="btn btn-primary-custom" />
                </div>
                <div>
                    <a href="@Url.Action("Index")" class="btn-custom">Volver a la lista</a>
                </div>
            </div>
        </div>
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function validarRut(rut) {
            rut = rut.replace(".", "").toUpperCase();

            // Validar formato
            if (!rut.match(/^[0-9]{7,8}-[0-9Kk]$/)) {
                mostrarError("Formato de RUT inválido.");
                return false;
            }

            // Validar dígito verificador
            var rutNumerico = parseInt(rut.substring(0, rut.length - 2), 10);
            var dvCalculado = calcularDigitoVerificador(rutNumerico);

            if (dvCalculado !== rut.charAt(rut.length - 1)) {
                mostrarError("El dígito verificador no es válido.");
                return false;
            }

            // Limpiar mensajes de error si el RUT es válido
            limpiarErrores();
            return true;
        }

        function calcularDigitoVerificador(rutNumerico) {
            var m = 0, s = 1;
            while (rutNumerico !== 0) {
                s = (s + rutNumerico % 10 * (9 - m++ % 6)) % 11;
                rutNumerico = Math.floor(rutNumerico / 10);
            }
            return String.fromCharCode((s > 0) ? s + 47 : 75);
        }

        function mostrarError(mensaje) {
            // Muestra el mensaje de error en la vista
            document.getElementById("mensajeErrorRut").innerHTML = mensaje;
        }

        function limpiarErrores() {
            // Limpia los mensajes de error en la vista
            document.getElementById("mensajeErrorRut").innerHTML = "";
        }

        function validarFormulario() {
            var rut = document.getElementById("rut").value;

            // Validar el RUT
            if (!validarRut(rut)) {
                mostrarError("Corrija los errores antes de enviar el formulario.");
                return false; // Evita que se envíe el formulario
            }

            // Limpiar mensajes de error si el RUT es válido
            limpiarErrores();

            // Permitir el envío del formulario
            return true;
        }
    </script>
    <script>
 // Script para manejar la expiración de la sesión
 setTimeout(function () {
     window.location.href = '@Url.Action("Login", "Account")';
 }, 43200000); // 12 horas en milisegundos
    </script>
}

else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Administrador</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}
