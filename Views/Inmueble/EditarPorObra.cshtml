@model  List<Proyecto_Cartilla_Autocontrol.Models.INMUEBLE>

@{
    ViewBag.Title = "Editar Inmuebles";
    var errorMessage = TempData["ErrorMessage"] as string;
}


@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}

@if (Session["Perfil"] != null && Session["Perfil"].ToString() == "Administrador")
{

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">
    <link rel="stylesheet" href="~/Content/css/items.css">
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-formularios">
            <div class="form-container">
                <h2>Editar Inmuebles de la Obra: <b> @Model.First().OBRA.nombre_obra </b> </h2>


                <!-- Tabla para mostrar los campos -->
                <table id="detalleTable">
                    <thead>
                        <tr>
                            <th style="width:15%;">Código Inmueble</th>
                            <th>Tipo de Inmueble</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Count; i++)
                        {
                            <tr class="detalle-cartilla">
                                <td>
                                    @Html.EditorFor(model => Model[i].inmueble_id, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                                    @Html.EditorFor(model => Model[i].OBRA_obra_id, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })

                                    @Html.EditorFor(model => Model[i].codigo_inmueble, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Model[i].codigo_inmueble, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.DropDownListFor(model => model[i].tipo_inmueble, new SelectList(new[] { "Departamento", "Vivienda" }), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model[i].tipo_inmueble, "", new { @class = "text-danger" })
                                </td>

                            </tr>
                        }

                    </tbody>
                </table>


                <div style=" margin-top: 20px;" class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input style="width: 100%;" id="submitButton" type="submit" value="Guardar Cambios" class="btn btn-primary-custom" />
                </div>
                <div>

                    <a href="@Url.Action("InmuebleLista")" class="btn-custom">Volver a la lista</a>
                </div>
            </div>
        </div>
    }

}

else
{
    <link rel="stylesheet" href="~/Content/css/AccesoDenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Administrador</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}